name: Build

on:
  workflow_run:
      workflows: ["CI"]
      types:
          - completed
      branches:
          - main
  workflow_dispatch:

permissions:
  packages: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-24.04
    outputs:
      image_tag: ${{ steps.tag.outputs.tag }}
    steps:
      - uses: actions/checkout@v4

      - name: Install mise
        uses: jdx/mise-action@5083fe46898c414b2475087cc79da59e7da859e8

      - name: Cache mise
        uses: actions/cache@v4
        with:
          path: ~/.local/share/mise
          key: ${{ runner.os }}-mise-${{ hashFiles('**/mise.toml') }}
          restore-keys: |
            ${{ runner.os }}-mise-

      - name: Cache frontend dependencies
        uses: actions/cache@v4
        with:
          path: |
            frontend/node_modules
          key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-frontend-

      - name: Cache Rust
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            backend/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('backend/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build
        run: task build

      - name: Generate image tag
        id: tag
        run: |
          TAG=$(echo ${{ github.sha }} | cut -c1-7)
          echo "tag=${TAG}" >> $GITHUB_OUTPUT

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            backend/target/release/backend
            backend/static/
            Dockerfile
          retention-days: 1

  docker:
    needs: build
    runs-on: ubuntu-24.04
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ needs.build.outputs.image_tag }}
